{"version":3,"sources":["componentes/Header.js","componentes/Formulario.js","componentes/Gasto.js","componentes/Listado.js","helper.js","componentes/Presupuesto.js","componentes/Restante.js","componentes/ControlPresupuesto.js","componentes/App.js","serviceWorker.js","index.js"],"names":["Header","props","react_default","a","createElement","titulo","prototypes","PropTypes","string","isRequired","FormularioGasto","nombreGasto","React","createRef","cantidadGasto","crearGasto","e","preventDefault","gasto","_this","current","value","agregarGasto","currentTarget","reset","onSubmit","this","className","ref","type","placeholder","Component","Gasto","_this$props$gasto","console","log","listado","Object","keys","gastos","map","key","i","Gasto_Gasto","validarPresupuesto","presupuesto","totalPresupuesto","parseInt","Presupuesto","Restante","_this$props","restante","revisarPresupuesto","ControlPresupuesto","Fragment","Presupuesto_Presupuesto","Restante_Restante","App","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","obtenerPresupuesto","prompt","setState","objectSpread","state","concat","Date","now","restarPresupuesto","cantidad","restar","Number","componentes_Header","Formulario_FormularioGasto","Listado_listado","ControlPresupuesto_ControlPresupuesto","Boolean","window","location","hostname","match","ReactDOM","render","componentes_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.25a27f3c.chunk.js","sourcesContent":["import React from \"react\";\r\nimport PropTypes from 'prop-types'\r\n\r\nconst Header = (props) =>{\r\n    return(<header>\r\n        <h1>{props.titulo}</h1>\r\n    </header>)\r\n}\r\n\r\nexport default Header;\r\n\r\nHeader.prototypes = {\r\n    titulo:PropTypes.string.isRequired\r\n}","import React, { Component } from 'react'\r\nimport PropTypes from 'prop-types'\r\n\r\n\r\nexport default class FormularioGasto extends Component {\r\n    //refs para los campos del formulario\r\n    nombreGasto = React.createRef();\r\n    cantidadGasto = React.createRef();\r\n\r\n    crearGasto = (e) =>{\r\n        //prevenir el default\r\n            e.preventDefault();\r\n        //creat el objeto con los datos\r\n            const gasto = {\r\n                nombreGasto:this.nombreGasto.current.value,\r\n                cantidadGasto:this.cantidadGasto.current.value\r\n            }\r\n       \r\n        // agregarlo y enviarlo por props\r\n                this.props.agregarGasto(gasto);\r\n\r\n        //resetear el formulario\r\n        e.currentTarget.reset();\r\n    }\r\n\r\n  render() {\r\n    return (\r\n        <form onSubmit={this.crearGasto}> \r\n            <h2>Agrega tus gastos aqui</h2>\r\n\r\n            <div className=\"campo\">\r\n                <label>Nombre Gasto</label>\r\n                <input ref={this.nombreGasto} className=\"u-full-width\" type=\"text\" placeholder=\"Ej. Transporte\" />\r\n            </div>\r\n        \r\n            <div className=\"campo\">\r\n                <label>Cantidad</label>\r\n                <input ref={this.cantidadGasto} className=\"u-full-width\" type=\"text\" placeholder=\"Ej. 300\" />\r\n            </div>\r\n        \r\n            <input className=\"button-primary u-full-width\" type=\"submit\" value=\"Agregar\" />\r\n    </form>\r\n    )\r\n  }\r\n}\r\n\r\n\r\nFormularioGasto.propTypes =\r\n{\r\n    agregarGasto:PropTypes.func.isRequired\r\n}","import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types'\r\n\r\n\r\nexport default class Gasto extends Component {\r\n  render() {\r\n      const{cantidadGasto,nombreGasto}=this.props.gasto;\r\n      console.log('props',cantidadGasto,nombreGasto);\r\n    return (\r\n      <li className='gastos'>\r\n           <p>\r\n               {nombreGasto}\r\n               <span className='gasto'>${cantidadGasto}</span>\r\n          </p>\r\n     </li>\r\n    )\r\n  }\r\n}\r\n\r\nGasto.propTypes = {\r\n  gasto:PropTypes.object.isRequired\r\n}","import React, { Component } from 'react';\r\nimport Gasto from './Gasto';\r\nimport PropTypes from 'prop-types'\r\n\r\n\r\nexport default class listado extends Component {\r\n  render() {\r\n    return (\r\n      <div className='gastos-realizados'>\r\n          <h2>Listado</h2>\r\n          {Object.keys(this.props.gastos).map((key,i)=>(<Gasto\r\n           key={key}\r\n           gasto={this.props.gastos[key]}\r\n          />))}\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nlistado.propTypes = {\r\n  gastos:PropTypes.object.isRequired\r\n}","export const validarPresupuesto = presupuesto => {\r\n    let totalPresupuesto = parseInt(presupuesto, 10)|| 0;\r\n\r\n    if(totalPresupuesto > 0 ) {\r\n        return totalPresupuesto;\r\n    } else {\r\n        return false;\r\n    }\r\n}\r\n\r\nexport const revisarPresupuesto = (presupuesto,restante) => {\r\n    let clase;\r\n    // Comprobar el 25% \r\n    if( (presupuesto / 4) > restante) {\r\n         clase = 'alert alert-danger';\r\n    } else if( (presupuesto / 2) > restante) {\r\n        clase = 'alert alert-warning'\r\n    } else {\r\n        clase = 'alert alert alert-success';\r\n    }\r\n    return clase;\r\n} ","import React, { Component } from 'react'\r\nimport PropTypes from 'prop-types'\r\n\r\n\r\nexport default class Presupuesto extends Component {\r\n  render() {\r\n    return (\r\n      <div className='alert alert-primary'>\r\n            <p>Presupuesto:${this.props.presupuesto}</p>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nPresupuesto.propTypes = {\r\n  presupuesto:PropTypes.string.isRequired\r\n}","import React, { Component } from 'react';\r\nimport  {revisarPresupuesto} from \"../helper\";\r\nimport PropTypes from 'prop-types'\r\n\r\n\r\nexport default class Restante extends Component {\r\n  render() {\r\n      const {presupuesto,restante} = this.props;\r\n    return (\r\n        <div className={revisarPresupuesto(presupuesto,restante)}>\r\n            <p>Restante:${this.props.restante}</p>\r\n        </div>\r\n    )\r\n  }\r\n}\r\n\r\nRestante.propTypes={\r\n    presupuesto:PropTypes.string.isRequired,\r\n    restante:PropTypes.string.isRequired\r\n  }","import React, { Component } from 'react';\r\nimport Presupuesto from './Presupuesto';\r\nimport Restante from './Restante';\r\nimport PropTypes from 'prop-types'\r\n\r\n\r\nexport default class ControlPresupuesto extends Component {\r\n  render() {\r\n    return (\r\n    <React.Fragment>\r\n        <Presupuesto\r\n          presupuesto={this.props.presupuesto}\r\n        />\r\n          <Restante\r\n            presupuesto={this.props.presupuesto}\r\n            restante={this.props.restante}\r\n          />\r\n    </React.Fragment>\r\n    )\r\n  }\r\n}\r\n\r\nControlPresupuesto.propTypes={\r\n  presupuesto:PropTypes.string.isRequired,\r\n  restante:PropTypes.string.isRequired\r\n}","import React, { Component } from 'react';\r\nimport '../css/App.css';\r\nimport Header from \"./Header\";\r\nimport FormularioGasto from './Formulario';\r\nimport Listado from \"./Listado\";\r\nimport {validarPresupuesto} from '../helper';\r\nimport ControlPresupuesto from \"./ControlPresupuesto\";  \r\n\r\nclass App extends Component {\r\n constructor(props){\r\n   super(props);\r\n   this.state = {\r\n        presupuesto:'',\r\n        restante:'',\r\n        gastos:{}\r\n   }\r\n }\r\ncomponentDidMount(){\r\n  this.obtenerPresupuesto();\r\n}\r\nobtenerPresupuesto = () =>{\r\n  let presupuesto = prompt('cual es el presupuesto?');\r\n  let resultado = validarPresupuesto(presupuesto);\r\n  if(resultado){\r\n    this.setState({\r\n      presupuesto:presupuesto,\r\n      restante:presupuesto\r\n    })  \r\n  }else{\r\n    this.obtenerPresupuesto();\r\n  }\r\n}\r\n\r\nagregarGasto = gasto =>{\r\n  //tomar una copia del state actual\r\n     const gastos = {...this.state.gastos};\r\n     \r\n\r\n  //agregar el gasto al objeto del state\r\n    gastos[`gastos${Date.now()}`]= gasto;\r\n    //restar al presupuesto\r\n    this.restarPresupuesto(gasto.cantidadGasto);\r\n  \r\n  //ponerlo en el state\r\n    this.setState({\r\n      gastos:gastos\r\n    });\r\n  }\r\nrestarPresupuesto = cantidad =>{\r\n  //leer el gasto\r\n  let restar = Number(cantidad);\r\n  //tomar una copia del state\r\n  let restante=this.state.restante;\r\n  //lo restamos\r\n  restante-=restar;\r\n\r\n  //agregamos el nuevo state\r\n  this.setState({\r\n    restante\r\n  })\r\n}\r\n\r\n  render() {\r\n    return (\r\n     <div className=\"App container\">\r\n     <Header\r\n     titulo=\"Gasto Semanal\"/>\r\n        <div className='contenido-principal contenido'>\r\n          <div className='row'>\r\n            <div className='one-half column'>\r\n                <FormularioGasto\r\n                 agregarGasto={this.agregarGasto}\r\n                />\r\n            </div>\r\n            <div className='one-half column'>\r\n              <Listado\r\n                gastos={this.state.gastos}\r\n              />\r\n              <ControlPresupuesto\r\n                presupuesto={this.state.presupuesto}\r\n                restante={this.state.restante}\r\n              />\r\n            </div>\r\n          </div>\r\n        </div>\r\n     </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './css/index.css';\nimport App from './componentes/App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}